generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.sqlite"
}

model User {
  id           String        @id @unique
  name         String
  username     String        @unique
  picture      String?
  auth_session Session[]
  key          Key[]
  billing_info BillingInfo[]
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model BillingInfo {
  id               String   @id @unique @default(uuid())
  user_id          String
  date             DateTime
  totalKwh         Int
  balance          Float
  payPerKwh        Float
  subReadingLatest Int?
  subReadingOld    Int?
  subKwh           Int?
  status           String
  paymentId        String?
  subPaymentId     String?

  user       User     @relation(references: [id], fields: [user_id], onDelete: Cascade)
  payment    Payment? @relation(name: "MainPayment", fields: [paymentId], references: [id], onDelete: Cascade)
  subPayment Payment? @relation(name: "SubPayment", fields: [subPaymentId], references: [id], onDelete: Cascade)

  @@index([user_id])
}

model Payment {
  id          String        @id @unique @default(uuid())
  date        DateTime      @default(now())
  amount      Float?
  mainPayment BillingInfo[] @relation(name: "MainPayment")
  subPayment  BillingInfo[] @relation(name: "SubPayment")
}
